---
name: Build and publish a Docker image

on:
  workflow_call:
    inputs:
      NOTEBOOK_TYPE:
        required: true
        type: string

env:
  IMAGE_PATH: ghcr.io/${{ github.repository }}-${{ inputs.NOTEBOOK_TYPE }}

jobs:
  build-scan-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4.1.1
        with:
          images: ${{ env.IMAGE_PATH }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}} # major.minor.patch
            type=semver,pattern={{major}}.{{minor}}

      - name: Build Docker image for scanning, but don't push yet
        uses: docker/build-push-action@v6.4.0
        id: build
        with:
          context: .
          build-args: notebook_type=${{ inputs.NOTEBOOK_TYPE }}
          push: false
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Run Trivy vulnerability scanner
        uses: "./.github/workflows/trivy.yml"
        with:
          NOTEBOOK_TYPE: ${{ matrix.notebook_type }}
          IMAGE_REF: ${{ steps.build.outputs.imageid }}
          EXIT_CODE: 1


      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}


      - name: Push Docker image
        # Per https://docs.docker.com/build/ci/github-actions/test-before-push,
        # The image is built once [in the 'build' step],
        # and [this step uses] the internal cache from the [earlier] step.
        uses: docker/build-push-action@v6.4.0
        with:
          context: .
          build-args: notebook_type=${{ inputs.NOTEBOOK_TYPE }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
...
