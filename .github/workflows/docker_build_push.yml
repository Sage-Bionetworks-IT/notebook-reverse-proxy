---
#
# This workflow builds a Docker image and passes it to Trivy for
# vulnerability scanning, only publishing it to ghrc.io if
# the scan passes.
#
name: Build and publish a Docker image

on:
  workflow_call:
    inputs:
      NOTEBOOK_TYPE:
        required: true
        type: string

env:
  IMAGE_PATH: ghcr.io/${{ github.repository }}-${{ inputs.NOTEBOOK_TYPE }}
  TARFILE_NAME: ${{ inputs.NOTEBOOK_TYPE }}-image.tar

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4.1.1
        with:
          images: ${{ env.IMAGE_PATH }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}} # major.minor.patch
            type=semver,pattern={{major}}.{{minor}}

      - name: Build Docker image for scanning, but don't push to ghcr.io yet
        uses: docker/build-push-action@v6.4.0
        with:
          context: .
          build-args: notebook_type=${{ inputs.NOTEBOOK_TYPE }}
          push: false
          outputs: type=tar,dest=${{ env.TARFILE_NAME }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Upload tarball for use by Trivy job
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.TARFILE_NAME }}
          path: ${{ env.TARFILE_NAME }}

    outputs:
      meta_json: ${{ steps.meta.outputs.json }}
      tarfile_artifact: ${{ env.TARFILE_NAME }}

  trivy-scan:
    needs: build
    uses: "./.github/workflows/trivy.yml"
    with:
      NOTEBOOK_TYPE: ${{ inputs.NOTEBOOK_TYPE }}
      SOURCE_TYPE: tar
      IMAGE_NAME: image-name
      TARFILE_NAME: ${{ needs.build.outputs.tarfile_artifact }}
      EXIT_CODE: 1

  push-image:
    needs: [build, trivy-scan]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        value: ${{ fromJSON(needs.build.outputs.meta_json).tags }}

    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build and push Docker image
        uses: docker/build-push-action@v6.4.0
        with:
          context: .
          push: true
          tags: ${{ matrix.value }}
...
